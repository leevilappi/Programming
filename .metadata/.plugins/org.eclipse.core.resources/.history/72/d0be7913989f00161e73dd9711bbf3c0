package kierros2
import scala.collection.mutable.ArrayBuffer


object AudioEffects extends App {
  
  val second: Int = 44100
  
  def removeVocals(sound: StereoSound) : StereoSound = {
    val soundData = ArrayBuffer[Int]()
            
    for(i <- 0 until sound.left.size){
      soundData += (sound.left(i) - sound.right(i)) / 2
    }
        
    new StereoSound("vocalsRemoved", soundData, soundData)
  }
  
  def fadeIn(sound: StereoSound, fadeLen: Int) = {
    
  }
  
  val korotus = 0.25
  val numbers = ArrayBuffer(1,1,1,1,1)

  for(i <- numbers){
  	val kerroin = 0
  	val output = ArrayBuffer()[Int]
  	
  	output += i * kerroin
}
  
}
